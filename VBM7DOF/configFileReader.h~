#ifndef ConfigReaderFile
#define ConfigReaderFile

#include <string>
#include <iostream>
#include <sstream>
#include <map>
#include <fstream>
#include <stdio.h>
#include <stdlib.h>		// atof
#include <climits>

//g++ -std=c++11 ConfigFileReader.cpp -o ConfigFileReader
#include "globalVariablesAndConstantsFEM1.h"


bool store_line( std::string key, std::string value)
{
//	printf("store_line\n");
	     if (key == "LOOP_FREQUENCY")
	{
		printf("LOOP_FREQUENCY:\t\tfrom\t%d\tto\t",LOOP_FREQUENCY);
		LOOP_FREQUENCY = stoi(value);
		printf("%d\n",LOOP_FREQUENCY);
		return true;
	}
	else if (key == "IMU_FREQUENCY")
	{
		printf("IMU_FREQUENCY:\tfrom\t%d\tto\t",IMU_FREQUENCY);
		IMU_FREQUENCY = stoi(value);
		printf("%d\n",IMU_FREQUENCY);
		return true;
	}
/*	else if (key == "MATLAB_FREQUENCY")
	{
		printf("MATLAB_FREQUENCY:\tfrom\t%d\tto\t",MATLAB_FREQUENCY);
		MATLAB_FREQUENCY = stoi(value);
		printf("%d\n",MATLAB_FREQUENCY);
		return true;
	}
*/	else if (key == "F1Thresh")
	{
		printf("F1Thresh:\tfrom\t%f\tto\t",F1Thresh);
		F1Thresh = stod(value);
		printf("%f\n",F1Thresh);
		return true;
	}
	else if (key == "F1Gain")
	{
		printf("F1Gain:\tfrom\t%f\tto\t",F1Gain);
		F1Gain = stod(value);
		printf("%f\n",F1Gain);
		return true;
	}
	else if (key == "F2Thresh")
	{
		printf("F2Thresh:\tfrom\t%f\tto\t",F2Thresh);
		F2Thresh = stod(value);
		printf("%f\n",F2Thresh);
		return true;
	}
	else if (key == "F2Gain")
	{
		printf("F2Gain:\tfrom\t%f\tto\t",F2Gain);
		F2Gain = stod(value);
		printf("%f\n",F2Gain);
		return true;
	}
	else if (key == "F3Thresh")
	{
		printf("F3Thresh:\tfrom\t%f\tto\t",F3Thresh);
		F3Thresh = stod(value);
		printf("%f\n",F3Thresh);
		return true;
	}
	else if (key == "F3Gain")
	{
		printf("F3Gain:\tfrom\t%f\tto\t",F3Gain);
		F3Gain = stod(value);
		printf("%f\n",F3Gain);
		return true;
	}
	else if (key == "F4Thresh")
	{
		printf("F4Thresh:\tfrom\t%f\tto\t",F4Thresh);
		F4Thresh = stod(value);
		printf("%f\n",F4Thresh);
		return true;
	}
	else if (key == "F4Gain")
	{
		printf("F4Gain:\tfrom\t%f\tto\t",F4Gain);
		F4Gain = stod(value);
		printf("%f\n",F4Gain);
		return true;
	}
	else if (key == "F5ThreshClose")
	{
		printf("F5ThreshClose:\tfrom\t%f\tto\t",F5ThreshClose);
		F5ThreshClose = stod(value);
		printf("%f\n",F5ThreshClose);
		return true;
	}
	else if (key == "F5ThreshOpen")
	{
		printf("F5ThreshOpen:\tfrom\t%f\tto\t",F5ThreshOpen);
		F5ThreshOpen = stod(value);
		printf("%f\n",F5ThreshOpen);
		return true;
	}else if (key == "F5Gain")
	{
		printf("F5Gain:\tfrom\t%f\tto\t",F5Gain);
		F5Gain = stod(value);
		printf("%f\n",F5Gain);
		return true;
	}
	
	
	else
	{
		return false;
	}
	return false;
}


//int main(int argc, char ** argv)
bool configFileReader( const char * configFileName)
{
	//std::ifstream file("ConfigFileFullMain.txt");
	std::ifstream file(configFileName);
	
	std::stringstream is_file;
	
	is_file << file.rdbuf();
	file.close();
	
	
	std::string line;
	std::string is_line2;
	std::string key;
	std::string value;

//	printf("\n");
	
	while( std::getline(is_file, line) )
	{
//		printf("while %s\n", line.c_str());
		std::istringstream is_line(line);
		//std::string is_line2;
		//std::string key;
//		if( 
		std::getline(is_line, is_line2, '#') ;//)
//		printf("is_line = '%s'\n", is_line2.c_str());
//		printf("is_line2.length() = %ld\n", is_line2.length());
		
		if( is_line2.length() == 0 )
		{
			is_line.ignore( INT_MAX, '\n');
		}
		else 
		{
			std::istringstream is_line3(is_line2);
			if( std::getline(is_line3, key, '=') )
			{
	//			printf("if1 %s\n", key.c_str());
				//std::string value;
				if( std::getline(is_line3, value) ) 
				{
	//				printf("if2%s\n", value.c_str());
					if(!store_line(key, value))
					{
						printf("Failed to change key=%s to value=%s\t\tExiting Program\n",key.c_str(),value.c_str());
						return 1;
					}
				}
			}
		}
		
	}
	
//	printf("goalSizeMult:\t%f\n",goalSizeMult);
//	printf("IMUOffset:\t%d\n",IMUOffset);
	
	
	return 0;
}

void printParameters(std::ofstream &parameterFile)
{
	parameterFile << 	"  IMU_FREQUENCY\t"		<< IMU_FREQUENCY	<< 
						"\nLOOP_FREQUENCY\t"	<< LOOP_FREQUENCY	<< 
//						"\nMATLAB_FREQUENCY\t"	<< MATLAB_FREQUENCY	<<
						"\nF1Thresh\t\t"		<< F1Thresh			<< 
						"\nF1Gain\t\t\t"		<< F1Gain			<< 
						"\nF2Thresh\t\t"		<< F2Thresh			<< 
						"\nF2Gain\t\t\t" 		<< F2Gain			<< 
						"\nF3Thresh\t\t" 		<< F3Thresh			<< 
						"\nF3Gain\t\t\t"		<< F3Gain			<< 
						"\nF4Thresh\t\t"		<< F4Thresh			<< 
						"\nF4Gain\t\t\t"		<< F4Gain			<< 
						"\nF5ThreshClose\t"		<< F5ThreshClose	<< 
						"\nF5ThreshOpen\t"		<< F5ThreshOpen		<< 
						"\nF5Gain\t\t\t"		<< F5Gain			<< 
					std::endl;
	return;
}





#endif //ConfigReaderFile
